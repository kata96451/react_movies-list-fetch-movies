{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","addMovie","useState","setMovie","error","setError","isLoading","setIsLoading","setTitle","onChangeTitle","str","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","Poster","Title","Plot","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","onClick","App","setMovies","find","item","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.110bb3e8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  addMovie: (m: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const onChangeTitle = (str: string) => {\n    setTitle(str);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(title)\n      .then((res) => {\n        if ('Error' in res) {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        const {\n          Poster, Title, Plot, imdbID,\n        } = res as MovieData;\n\n        setMovie({\n          title: Title,\n          description: Plot === 'N/A' ? '' : Plot,\n          imgUrl: Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      }).finally(() => setIsLoading(false));\n  };\n\n  const addMovieHandler = () => {\n    if (movie) {\n      addMovie(movie);\n      onChangeTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={title}\n              onChange={(e) => {\n                onChangeTitle(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                classNames('button is-light', { 'is-loading': isLoading })\n              }\n              disabled={title === ''}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cd7f4052';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const duplicate = movies.find(item => movie.imdbId === item.imdbId);\n\n    if (!duplicate) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}